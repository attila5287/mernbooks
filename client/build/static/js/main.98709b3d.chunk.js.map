{"version":3,"sources":["logo.svg","components/Jumbotron/index.js","components/DeleteBtn/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","pages/Books.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Jumbotron","children","style","height","clear","paddingTop","textAlign","className","DeleteBtn","props","role","tabIndex","query","axios","get","Container","fluid","Row","Col","size","split","map","join","List","ListItem","Input","onChange","handleInputChange","Books","useState","books","setBooks","useEffect","API","then","res","data","items","catch","err","console","log","event","q","target","value","trim","name","placeholder","length","book","idx","key","href","_id","volumeInfo","title","author","onClick","Nav","App","src","logo","alt","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.98709b3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.495d93cc.svg\";","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      âœ—\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import axios from \"axios\";\n\nexport default {\n  \n  // Gets google books\n  googleBooks: function(query) {\n    return axios.get(\n\t\t\t'https://www.googleapis.com/books/v1/volumes?q=$' + query\n\t\t);\n  },\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n\t\t<div className='form-group'>\n\t\t\t<input className='form-control' onChange={props.handleInputChange}/>\n\t\t</div>\n\t);\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n  // Load all books and store them with setBooks\n  useEffect( () => {\n    API.googleBooks('attila')\n\t\t\t.then((res) => setBooks(res.data.items))\n\t\t\t.catch((err) => console.log(err));\n  }, [])\n\n  // Loads all books and sets them to books\n  function handleInputChange ( event ) {\n    const q = event.target.value.trim()\n    console.log(`>> q`, q)\n    API.googleBooks(q)\n      .then(res => \n      {\n        console.log(`res.data.items`, res.data.items)\n        setBooks( res.data.items )\n      }\n      )\n      .catch(err => console.log(err));\n  };\n\n\n    return (\n\t\t\t<Container fluid>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col size='md-6'>\n\t\t\t\t\t\t<Jumbotron>\n\t\t\t\t\t\t\t<h1>What Books Should I Read?</h1>\n\t\t\t\t\t\t</Jumbotron>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<Input\n                handleInputChange={ ( event ) => handleInputChange( event ) }\n\t\t\t\t\t\t\t\tname='title'\n\t\t\t\t\t\t\t\tplaceholder='Title (required)'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col size='md-6 sm-12'>\n\t\t\t\t\t\t<Jumbotron>\n\t\t\t\t\t\t\t<h1>Books On My List</h1>\n\t\t\t\t\t\t</Jumbotron>\n\t\t\t\t\t\t{books.length ? (\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t{books.map((book, idx) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ListItem key={idx}>\n\t\t\t\t\t\t\t\t\t\t\t<a href={'/books/' + book._id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{book.volumeInfo.title} by {book.author}\n\t\t\t\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t<DeleteBtn onClick={() => {}} />\n\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h3>No Results to Display</h3>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n  }\n\n\nexport default Books;\n","import React from \"react\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        React Reading List\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Books from './pages/Books';\nimport Nav from './components/Nav';\n\n\nfunction App() {\n  return (\n\t\t<div className='App'>\n\t\t\t<div className='App-header'>\n\t\t\t\t<img src={logo} className='App-logo' alt='logo' />\n\t\t\t\t<h2>Welcome to React</h2>\n\t\t\t</div>\n\t\t\t<Nav />\n\t\t\t<Books />\n\t\t</div>\n\t);\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootswatch/dist/quartz/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}